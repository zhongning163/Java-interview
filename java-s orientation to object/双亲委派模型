每个类加载器都有一个独立的类名称空间

如果要比较两个类是否相等（包括equals()方法、isAssignableFrom()方法、isInstance()方法），
只有在这两个类被同一个类加载器加载的前提下，比较才有意义。
否则，即使两个类来自同一个class文件，被同一个JVM加载，但是加载它们的类加载器不同，则这两个类就不相等

Bootstrap ClassLoader负责加载Java的核心类

双亲委派模型

JVM中类加载的机制——双亲委派模型。这个模型要求除了Bootstrap ClassLoader外，其余的类加载器都要有自己的父加载器。
子加载器通过组合来复用父加载器的代码，而不是使用继承。
在某个类加载器加载class文件时，它首先委托父加载器去加载这个类，依次传递到顶层类加载器(Bootstrap)。
如果顶层加载不了（它的搜索范围中找不到此类），子加载器才会尝试加载这个类。

双亲委派模型最大的好处就是让Java类同其类加载器一起具备了一种带优先级的层次关系。
这句话可能不好理解，我们举个例子。比如我们要加载顶层的Java类——java.lang.Object类，
无论我们用哪个类加载器去加载Object类，这个加载请求最终都会委托给Bootstrap ClassLoader，
这样就保证了所有加载器加载的Object类都是同一个类。
